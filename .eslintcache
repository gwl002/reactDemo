[{"D:\\workspace\\react-demo\\src\\index.js":"1","D:\\workspace\\react-demo\\src\\reportWebVitals.js":"2","D:\\workspace\\react-demo\\src\\router.js":"3","D:\\workspace\\react-demo\\src\\pages\\home.js":"4","D:\\workspace\\react-demo\\src\\hooks\\useResize.js":"5","D:\\workspace\\react-demo\\src\\pages\\TodoList.js":"6","D:\\workspace\\react-demo\\src\\pages\\test.js":"7","D:\\workspace\\react-demo\\src\\pages\\AnimatedPage.js":"8","D:\\workspace\\react-demo\\src\\pages\\FactSheet.js":"9"},{"size":543,"mtime":1610163012312,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1440,"mtime":1611413824083,"results":"13","hashOfConfig":"11"},{"size":2101,"mtime":1611414425995,"results":"14","hashOfConfig":"11"},{"size":1472,"mtime":1610115574927,"results":"15","hashOfConfig":"16"},{"size":3842,"mtime":1610172637330,"results":"17","hashOfConfig":"11"},{"size":700,"mtime":1610199390554,"results":"18","hashOfConfig":"11"},{"size":1610,"mtime":1611414429287,"results":"19","hashOfConfig":"11"},{"size":4054,"mtime":1611502174033,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"183021z",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"1eekuss",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"D:\\workspace\\react-demo\\src\\index.js",[],["47","48"],"D:\\workspace\\react-demo\\src\\reportWebVitals.js",[],"D:\\workspace\\react-demo\\src\\router.js",[],"D:\\workspace\\react-demo\\src\\pages\\home.js",["49"],"import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nexport default function Home() {\r\n    const [count, setCount] = useState(0);\r\n\r\n    const deleteFn = useCallback(() => {\r\n        return null;\r\n    }, [])\r\n\r\n    const add = () => {\r\n        setCount(count => count + 1);\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        setCount(count => count - 1 >= 0 ? count - 1 : 0)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            home\r\n            <div className=\"container\">\r\n                <button id=\"btn\" onClick={add}>\r\n                    add\r\n                </button>\r\n                <button id=\"btn\" onClick={deleteItem} >\r\n                    delete\r\n                </button>\r\n                <div id=\"resizeEle\">\r\n                    {\r\n                        Array(count).fill(1).map((item, index) => {\r\n                            return <Item\r\n                                index={index}\r\n                                item={item}\r\n                                deleteFn={deleteFn}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst randomColor = () => {\r\n    let r = Math.random(1) * 255;\r\n    let g = Math.random(1) * 255;\r\n    let b = Math.random(1) * 255;\r\n    return `rgb(${r},${g},${b})`;\r\n}\r\n\r\n// const Item = React.memo(\r\n//     ({ item, index, deleteFn }) => {\r\n//         useEffect(() => {\r\n//             console.log(\"mounted \" + index);\r\n//             return () => {\r\n//                 console.log(\"unmounted \" + index);\r\n//             }\r\n//         })\r\n\r\n//         return (\r\n//             <div key={index} style={{ height: 100, backgroundColor: randomColor() }}>{index}</div>\r\n//         )\r\n//     }\r\n// )\r\n\r\nconst Item = ({ item, index, deleteFn }) => {\r\n    useEffect(() => {\r\n        console.log(\"mounted \" + index);\r\n        return () => {\r\n            console.log(\"unmounted \" + index);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div key={index} style={{ height: 100, backgroundColor: randomColor() }}>{index}</div>\r\n    )\r\n}","D:\\workspace\\react-demo\\src\\hooks\\useResize.js",["50","51","52","53"],"import { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function useResize(elementId, callback) {\r\n    let MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver\r\n    let observer = null;\r\n    let recordOldValue = { width: 0, height: 0 };\r\n    useEffect(() => {\r\n        console.log(\"mounted\");\r\n        let element = document.getElementById(elementId);\r\n        if (element) {\r\n            observer = new MutationObserver((mutationList) => {\r\n                for (let mutation of mutationList) {\r\n                    console.log(mutation)\r\n                }\r\n                let width = getComputedStyle(element).getPropertyValue('width');\r\n                let height = getComputedStyle(element).getPropertyValue('height');\r\n                if (width === recordOldValue.width && height === recordOldValue.height) return;\r\n                recordOldValue = {\r\n                    width,\r\n                    height\r\n                }\r\n                if (typeof callback === \"function\") {\r\n                    callback(width, height);\r\n                }\r\n            })\r\n            observer.observe(element, { attributes: true, attributeFilter: ['style'], attributeOldValue: true })\r\n        }\r\n        return () => {\r\n            console.log(\"deleted\");\r\n            observer.disconnect()\r\n            observer.takeRecords()\r\n            observer = null\r\n        }\r\n    }, [])\r\n\r\n    return [observer];\r\n}",["54","55"],"D:\\workspace\\react-demo\\src\\pages\\TodoList.js",["56","57"],"import React, { useState, useCallback, useEffect, useReducer } from 'react';\r\n\r\nconst initState = {\r\n    input: \"\",\r\n    todos: []\r\n};\r\n\r\n// todo = {\r\n//     id:\"\",\r\n//     text: \"\",\r\n//     createdAt: \"\",\r\n//     updatedAt: \"\",\r\n//     completed: false\r\n// }\r\n\r\nconst createRandomId = () => {\r\n    return Date.now().toString() + Math.floor(Math.random() * 10000)\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"addTodo\":\r\n            return {\r\n                ...state,\r\n                input: \"\",\r\n                todos: [\r\n                    ...state.todos,\r\n                    {\r\n                        id: createRandomId(),\r\n                        text: action.text,\r\n                        createdAt: Date.now(),\r\n                        updatedAt: null,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n            break;\r\n        case \"toggleComplete\":\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map((todo, index) => {\r\n                    if (todo.id === action.id) {\r\n                        let obj = { ...todo };\r\n                        obj.completed = !obj.completed;\r\n                        return obj;\r\n                        //为什么这里不会起作用 因为todoItem中todo没变\r\n                        // todo.completed = !todo.completed;\r\n                        // return todo;\r\n                    }\r\n                    return todo\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function TodoList() {\r\n    const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n    const addTodo = (text) => {\r\n        if (text) {\r\n            dispatch({\r\n                type: \"addTodo\",\r\n                text\r\n            })\r\n        }\r\n    }\r\n\r\n    // const toggleCheck = useCallback(\r\n    //     (id) => {\r\n    //         dispatch({\r\n    //             type: \"toggleComplete\",\r\n    //             id\r\n    //         })\r\n    //     }\r\n    //     , [dispatch])\r\n\r\n    const toggleCheck = (id) => {\r\n        dispatch({\r\n            type: \"toggleComplete\",\r\n            id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>TodoList</h3>\r\n            <AddTodo addTodo={addTodo} />\r\n            <Todos todos={state.todos} toggleCheck={toggleCheck} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            <button onClick={(e) => {\r\n                addTodo(text);\r\n                setText(\"\");\r\n            }}>add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Todos = ({ todos, toggleCheck }) => {\r\n    return (\r\n        <>\r\n            {\r\n                todos.map((todo, index) => {\r\n                    return (\r\n                        <TodoItem todo={todo} key={todo.id} toggleCheck={toggleCheck} />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst TodoItem = ({ todo, toggleCheck }) => {\r\n    console.log(todo, \"======\");\r\n    useEffect(() => {\r\n        console.log(\"mounted\");\r\n        return () => {\r\n            console.log(\"unmounted\");\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"todo change\")\r\n    }, [todo])\r\n\r\n    useEffect(() => {\r\n        console.log(\"togoCheck change\")\r\n    }, [toggleCheck])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => {\r\n                    toggleCheck(todo.id)\r\n                }}\r\n            />\r\n            <span>{todo.text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n//区分 render 和 mount   props change ","D:\\workspace\\react-demo\\src\\pages\\test.js",["58","59","60"],"import React, { useState, useCallback, useEffect, useReducer } from 'react';\r\n\r\nexport default () => {\r\n    const [showB, setShowB] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setShowB(!showB) }}>toggle</button>\r\n            <A />\r\n            {showB && <B />}\r\n            <C />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst A = () => {\r\n    return (\r\n        <div>A</div>\r\n    )\r\n}\r\n\r\nconst B = () => {\r\n    return (\r\n        <div>B</div>\r\n    )\r\n}\r\n\r\nconst C = () => {\r\n\r\n    useEffect(() => {\r\n        console.log(\"mounted C\")\r\n        return () => {\r\n            console.log(\"unmounted C\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>C</div>\r\n    )\r\n}","D:\\workspace\\react-demo\\src\\pages\\AnimatedPage.js",["61","62","63","64","65"],"import React, { useState, useCallback, useEffect, useReducer, useRef } from 'react';\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../styles/animate.css\";\r\n\r\nexport default () => {\r\n    const [num, setNum] = useState(0);\r\n    const [positionY, setPositionY] = useState(0);\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setNum(num => num + 100) }}>add</button>\r\n            <button onClick={() => { setNum(num => num - 100) }}>minus</button>\r\n            <button onClick={() => { setPositionY(100) }}>add</button>\r\n            <Number number={num} />\r\n            <Nest positionY={positionY} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Number(props) {\r\n    props = useSpring({ number: props.number ? props.number : 0 });\r\n    return (\r\n        <animated.span>\r\n            {props.number.interpolate(x => (x * 100).toFixed(0))}\r\n        </animated.span>\r\n    )\r\n}\r\n\r\nconst Nest = React.memo(({ positionY }) => {\r\n    let { xyz } = useSpring({\r\n        from: { xyz: [0, 0, 0] },\r\n        to: async (next, cancel) => {\r\n            await next({ xyz: [100, 0, 0], delay: 1000 })\r\n            await next({ xyz: [100, 400, 0] })\r\n        },\r\n    })\r\n\r\n    return (\r\n        <animated.div\r\n            style={{\r\n                transform: xyz.interpolate((x, y, z) => `translate3d(${x}px, ${y}px, ${z}px)`),\r\n            }}\r\n        >\r\n            <animated.span\r\n                className=\"box\"\r\n            >\r\n                {xyz.interpolate((x, y, z) => `${x.toFixed(2)}\\n${y.toFixed(2)}\\n${z.toFixed(2)}`)}\r\n            </animated.span>\r\n        </animated.div >\r\n    )\r\n})\r\n\r\n","D:\\workspace\\react-demo\\src\\pages\\FactSheet.js",["66","67","68","69","70"],"import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport \"../styles/factsheet.css\";\r\nimport 'swiper/swiper.min.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst items = [\r\n    {\r\n        title: \"A\",\r\n        name: \"a\",\r\n        date: \"2020-12-09\"\r\n    },\r\n    {\r\n        title: \"B\",\r\n        name: \"b\",\r\n        date: \"2021-01-09\"\r\n    },\r\n    {\r\n        title: \"C\",\r\n        name: \"c\",\r\n        date: \"2021-02-01\"\r\n    },\r\n    {\r\n        title: \"D\",\r\n        name: \"d\",\r\n        date: \"2021-01-22\"\r\n    },\r\n    {\r\n        title: \"E\",\r\n        name: \"e\",\r\n        date: \"2021-01-28\"\r\n    }\r\n]\r\n\r\nexport default function FactSheet() {\r\n    const [show, setShow] = useState(false);\r\n    const [current, setCurrent] = useState(null);\r\n    const domRef = useRef(null);\r\n\r\n    const handleClick = useCallback((e, item) => {\r\n        let ele = e.currentTarget;\r\n        let rect = ele.getBoundingClientRect();\r\n        ele.style.visibility = \"hidden\";\r\n        setShow(true);\r\n        setCurrent(item);\r\n        setTimeout(() => {\r\n            let cloneEle = document.querySelector(\"#modal .item\");\r\n            let translateX = getTranslateX(ele);\r\n            domRef.current = cloneEle;\r\n            cloneEle.style.cssText = `\r\n            transform: translateX(${translateX}px);\r\n            transition: transform 1s ease;\r\n            top: ${rect.top}px;\r\n            left: ${rect.left}px;\r\n        `\r\n        })\r\n\r\n    }, [])\r\n\r\n    const closeModal = useCallback(() => {\r\n        setShow(false);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            Fact Sheet\r\n            <div className=\"container\">\r\n                <Swiper\r\n                    spaceBetween={50}\r\n                    slidesPerView={4}\r\n                    onSlideChange={() => console.log('slide change')}\r\n                    onSwiper={(swiper) => console.log(swiper)}\r\n                >\r\n                    {\r\n                        items.map((item, index) => {\r\n                            return (\r\n                                <SwiperSlide id={item.name}>\r\n                                    <Item item={item} handleClick={handleClick} />\r\n                                </SwiperSlide>\r\n                            )\r\n                        })\r\n                    }\r\n                </Swiper>\r\n            </div>\r\n            <Modal show={show} closeModal={closeModal} item={current}>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst Item = ({ item, handleClick, style }) => {\r\n    const _handleClick = useCallback((e) => {\r\n        handleClick(e, item);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"item\" onClick={_handleClick} id={\"item-\" + item?.name}>\r\n            <p>{item?.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Modal = ({ show, item, closeModal, children }) => {\r\n    console.log(item)\r\n    return (\r\n        <CSSTransition\r\n            in={show}\r\n            timeout={1000}\r\n            classNames='fade'\r\n            unmountOnExit\r\n            onEntered={el => { }}\r\n            onEnter={el => {\r\n\r\n            }}\r\n            onEntering={el => {\r\n\r\n            }}\r\n            onEntered={el => {\r\n\r\n            }}\r\n            appear={true}\r\n        >\r\n            <div className=\"modal\" id=\"modal\">\r\n                <Item item={item} handleClick={closeModal} />\r\n                <div className=\"content\"></div>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nfunction getPosition(ele) {\r\n    let rect = ele.getBoundingClientRect();\r\n    console.log(rect);\r\n}\r\n\r\nfunction getCenterPosition(ele) {\r\n    if (ele) {\r\n        const rect = ele.getBoundingClientRect();\r\n        return {\r\n            x: rect.left + rect.width / 2,\r\n            y: rect.top + rect.height / 2\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTranslateX(ele) {\r\n    let currentPosition = getCenterPosition(ele);\r\n    let toPosition = getCenterPosition(document.body);\r\n    return toPosition.x - currentPosition.x;\r\n}\r\n\r\n\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":73,"column":8,"nodeType":"77","endLine":73,"endColumn":10,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":1,"column":20,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"84","line":11,"column":24,"nodeType":"85","endLine":25,"endColumn":15},{"ruleId":"75","severity":1,"message":"86","line":18,"column":34,"nodeType":"87","endLine":21,"endColumn":18},{"ruleId":"71","replacedBy":"88"},{"ruleId":"73","replacedBy":"89"},{"ruleId":"79","severity":1,"message":"90","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":38},{"ruleId":"91","severity":1,"message":"92","line":37,"column":13,"nodeType":"93","messageId":"94","endLine":37,"endColumn":19},{"ruleId":"79","severity":1,"message":"90","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":38},{"ruleId":"79","severity":1,"message":"95","line":1,"column":51,"nodeType":"81","messageId":"82","endLine":1,"endColumn":61},{"ruleId":"96","severity":1,"message":"97","line":3,"column":1,"nodeType":"98","endLine":14,"endColumn":2},{"ruleId":"79","severity":1,"message":"90","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":38},{"ruleId":"79","severity":1,"message":"99","line":1,"column":40,"nodeType":"81","messageId":"82","endLine":1,"endColumn":49},{"ruleId":"79","severity":1,"message":"95","line":1,"column":51,"nodeType":"81","messageId":"82","endLine":1,"endColumn":61},{"ruleId":"79","severity":1,"message":"83","line":1,"column":63,"nodeType":"81","messageId":"82","endLine":1,"endColumn":69},{"ruleId":"96","severity":1,"message":"97","line":5,"column":1,"nodeType":"98","endLine":17,"endColumn":2},{"ruleId":"79","severity":1,"message":"99","line":1,"column":40,"nodeType":"81","messageId":"82","endLine":1,"endColumn":49},{"ruleId":"79","severity":1,"message":"100","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"101","line":98,"column":8,"nodeType":"77","endLine":98,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":122,"column":13,"nodeType":"105","endLine":124,"endColumn":15},{"ruleId":"79","severity":1,"message":"106","line":135,"column":10,"nodeType":"81","messageId":"82","endLine":135,"endColumn":21},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","Assignments to the 'observer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'recordOldValue' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression",["107"],["108"],"'useCallback' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useReducer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","React Hook useCallback has missing dependencies: 'handleClick' and 'item'. Either include them or remove the dependency array. If 'handleClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["110"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getPosition' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [index]",{"range":"115","text":"116"},"Update the dependencies array to be: [handleClick, item]",{"range":"117","text":"118"},[1976,1978],"[index]",[2697,2699],"[handleClick, item]"]